---
# This playbook manages code deployment on IBM z/OS systems for host ben_s0w1.
# It ensures the codebase is up-to-date and subsequently initiates a build process on the z/OS.

- hosts: ben_s0w1 

  # Utilize modules from the IBM z/OS Core collection for tasks specific to z/OS.
  collections:
    - ibm.ibm_zos_core

  # Bypass default fact gathering for performance as it's not used in this playbook.
  gather_facts: no

  vars:
    repo_directory: "/u/ibmuser/zGit-Repositories/dbb-zappbuild"

  # Set global environment variables for all tasks. Define 'environment_vars' in an external source like inventory or group_vars.
  environment: "{{ environment_vars }}"

  tasks:
  
    # Test connectivity to the z/OS host.
    - name: Ping using zos_ping
      zos_ping:
      register: zos_ping_result

    # Output the z/OS ping response for diagnostic purposes.
    - name: Response from zos_ping
      debug:
        msg: "{{ zos_ping_result }}"

    # Identify the version of git installed on the z/OS system.
    - name: Check git version
      command: "git --version"
      register: git_version_result

    # Output the detected git version for verification.
    - name: Display git version
      debug:
        msg: "{{ git_version_result.stdout }}"

    # Sync the specified Git repository, ensuring the latest codebase using SSH.
    - name: Pull latest code from repository
      git:
        repo: "git@github.com:benjaminthompson1/dbb-zappbuild.git"
        dest: "{{ repo_directory }}"
        version: 'HEAD'
        accept_hostkey: yes  # Automatically trust the SSH host key, but be cautious in production environments.
        key_file: "/u/ibmuser/.ssh/github_rsa"
        update: yes

    # Run the Groovy build script, specifying necessary parameters for the build process.
#    - name: Execute Groovy script on the remote machine
#      command: >
#        /usr/lpp/IBM/dbb/bin/groovyz {{ repo_directory }}/build.groovy
#        --workspace {{ repo_directory }}/samples
#        --application MortgageApplication
#        --outDir /tmp/out
#        --hlq IBMUSER.DBB
#        {{ repo_directory }}/samples/MortgageApplication/cobol/hellow.cbl            
#      environment:
#        JAVA_HOME: "/usr/lpp/java/J8.0_64"
#      register: result

    # Display output of the Groovy script for debugging and validation.
#    - name: Display result of Groovy script
#      debug:
#        msg: "{{ result.stdout }}"

    - name: Execute Groovy script on the remote machine
      command: >
        /usr/lpp/IBM/dbb/bin/groovyz {{ repo_directory }}/build.groovy
        --workspace {{ repo_directory }}/samples
        --application MortgageApplication
        --outDir /tmp/out
        --hlq IBMUSER.DBB
        --fullBuild         
      environment:
        JAVA_HOME: "/usr/lpp/java/J8.0_64"
      register: result

    # Display output of the Groovy script for debugging and validation.
    - name: Display result of Groovy script
      debug:
        msg: "{{ result.stdout }}"

